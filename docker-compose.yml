
version: '3.4'

services:
  postgres:
    image: postgres:11.14
    restart: always
    environment:
      POSTGRES_PASSWORD: test
      POSTGRES_USER: test
      POSTGRES_DB: test
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - 5432:5432

  adminer:
    image: adminer
    restart: always
    ports:
      - 3001:8080
  maildev:
    image: maildev/maildev
    ports:
      - 1080:1080
      - 1025:1025

  discovery:
    build:
      context: ./projects/hotel_automation_project/discovery_evr
      dockerfile: Discovery.Dockerfile
    ports:
      - 3010:80
    environment:
      EUREKA_URL: http://discovery:80/oktet
      DOMAIN_NAME: discovery

#  logger:
#    build:
#      context: ./projects/hotel_automation_project/logger
#      dockerfile: Logger.Dockerfile
#   ports:
#     - 3011:80
#    environment:
#      EUREKA_URL: http://discovery:80/eureka/eureka/
#      DOMAIN_NAME: logger
#      DATABASE_URL: jdbc:postgresql://postgres:5432/test
#      DATABASE_USER: test
#      DATABASE_PASS: test

  complains:
    build:
      context: ./projects/hotel_automation_project/complaint_handling_service
      dockerfile: Complaints.Dockerfile
    ports:
      - 3012:80
    environment:
      EUREKA_URL: http://discovery:80/eureka/eureka/
      DOMAIN_NAME: complains
      DATABASE_URL: jdbc:postgresql://postgres:5432/test
      DATABASE_USER: test
      DATABASE_PASS: test

  gateway:
    build:
      context: ./projects/hotel_automation_project/gateway
      dockerfile: Gateway.Dockerfile
    ports:
      - 3000:80
    environment:
      EUREKA_URL: http://discovery:80/eureka/eureka/
      DOMAIN_NAME: gateway

  booking:
    build:
      context: ./projects/hotel_automation_project/booking_service
      dockerfile: booking.Dockerfile
    ports:
      - 3015:80
    environment:
      EUREKA_URL: http://discovery:80/eureka/eureka/
      DOMAIN_NAME: booking
      DATABASE_URL: jdbc:postgresql://postgres:5432/test
      DATABASE_USER: test
      DATABASE_PASS: test

  operation:
    build:
      context: ./projects/hotel_automation_project/operation_service
      dockerfile: Operation.Dockerfile
    ports:
      - 3016:80
    environment:
      EUREKA_URL: http://discovery:80/eureka/eureka/
      DOMAIN_NAME: operation
      DATABASE_URL: jdbc:postgresql://postgres:5432/test
      DATABASE_USER: test
      DATABASE_PASS: test

  user:
    build:
      context: ./projects/hotel_automation_project/user
      dockerfile: User.Dockerfile
    ports:
      - 3017:80
    environment:
      EUREKA_URL: http://discovery:80/eureka/eureka/
      DOMAIN_NAME: user
      DATABASE_URL: jdbc:postgresql://postgres:5432/test
      DATABASE_USER: test
      DATABASE_PASS: test
      PUBLIC_HOST: localhost
      MAIL_HOST: maildev
      CONFIRM_ADDR: ${GATEWAY_ADDR} #установить OKTETO SECRET с таким именем или выставить в https://gateway-kostua16.cloud.okteto.net/
volumes:
  pg_data:
